// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        (unknown)
// source: mapspace/v1/mapspace.proto

package mapspace

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/Mattilsynet/mapis/gen/go/meta/v1"
	_ "github.com/Mattilsynet/mapis/gen/go/status/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Mapspace struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          *v1.TypeMeta           `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Metadata      *v1.ObjectMeta         `protobuf:"bytes,10,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec          *MapspaceSpec          `protobuf:"bytes,20,opt,name=spec,proto3" json:"spec,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Mapspace) Reset() {
	*x = Mapspace{}
	mi := &file_mapspace_v1_mapspace_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Mapspace) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Mapspace) ProtoMessage() {}

func (x *Mapspace) ProtoReflect() protoreflect.Message {
	mi := &file_mapspace_v1_mapspace_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Mapspace.ProtoReflect.Descriptor instead.
func (*Mapspace) Descriptor() ([]byte, []int) {
	return file_mapspace_v1_mapspace_proto_rawDescGZIP(), []int{0}
}

func (x *Mapspace) GetType() *v1.TypeMeta {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *Mapspace) GetMetadata() *v1.ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Mapspace) GetSpec() *MapspaceSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

type MapspaceSpec struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	MapspaceStatus *MapspaceStatus        `protobuf:"bytes,20,opt,name=mapspace_status,json=mapspaceStatus,proto3" json:"mapspace_status,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *MapspaceSpec) Reset() {
	*x = MapspaceSpec{}
	mi := &file_mapspace_v1_mapspace_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapspaceSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapspaceSpec) ProtoMessage() {}

func (x *MapspaceSpec) ProtoReflect() protoreflect.Message {
	mi := &file_mapspace_v1_mapspace_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapspaceSpec.ProtoReflect.Descriptor instead.
func (*MapspaceSpec) Descriptor() ([]byte, []int) {
	return file_mapspace_v1_mapspace_proto_rawDescGZIP(), []int{1}
}

func (x *MapspaceSpec) GetMapspaceStatus() *MapspaceStatus {
	if x != nil {
		return x.MapspaceStatus
	}
	return nil
}

type MapspaceStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatusMap     map[string]string      `protobuf:"bytes,1,rep,name=statusMap,proto3" json:"statusMap,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MapspaceStatus) Reset() {
	*x = MapspaceStatus{}
	mi := &file_mapspace_v1_mapspace_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MapspaceStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MapspaceStatus) ProtoMessage() {}

func (x *MapspaceStatus) ProtoReflect() protoreflect.Message {
	mi := &file_mapspace_v1_mapspace_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MapspaceStatus.ProtoReflect.Descriptor instead.
func (*MapspaceStatus) Descriptor() ([]byte, []int) {
	return file_mapspace_v1_mapspace_proto_rawDescGZIP(), []int{2}
}

func (x *MapspaceStatus) GetStatusMap() map[string]string {
	if x != nil {
		return x.StatusMap
	}
	return nil
}

var File_mapspace_v1_mapspace_proto protoreflect.FileDescriptor

var file_mapspace_v1_mapspace_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6d, 0x61, 0x70, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61,
	0x70, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0b, 0x6d, 0x61,
	0x70, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x6d, 0x65, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x2f,
	0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x91, 0x01, 0x0a, 0x08, 0x4d, 0x61, 0x70, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12,
	0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e,
	0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74, 0x61, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2d, 0x0a, 0x04, 0x73, 0x70, 0x65, 0x63, 0x18,
	0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x6d, 0x61, 0x70, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x70, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x70, 0x65, 0x63,
	0x52, 0x04, 0x73, 0x70, 0x65, 0x63, 0x22, 0x54, 0x0a, 0x0c, 0x4d, 0x61, 0x70, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x53, 0x70, 0x65, 0x63, 0x12, 0x44, 0x0a, 0x0f, 0x6d, 0x61, 0x70, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1b, 0x2e, 0x6d, 0x61, 0x70, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61,
	0x70, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0e, 0x6d, 0x61,
	0x70, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x98, 0x01, 0x0a,
	0x0e, 0x4d, 0x61, 0x70, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x48, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x61, 0x70, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x6d, 0x61, 0x70, 0x73, 0x70, 0x61, 0x63, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x61, 0x70, 0x73, 0x70, 0x61, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09,
	0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x61, 0x70, 0x1a, 0x3c, 0x0a, 0x0e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x42, 0x37, 0x5a, 0x35, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x74, 0x74, 0x69, 0x6c, 0x73, 0x79, 0x6e, 0x65,
	0x74, 0x2f, 0x6d, 0x61, 0x70, 0x69, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x6d, 0x61, 0x70, 0x73,
	0x70, 0x61, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x6d, 0x61, 0x70, 0x73, 0x70, 0x61, 0x63, 0x65,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mapspace_v1_mapspace_proto_rawDescOnce sync.Once
	file_mapspace_v1_mapspace_proto_rawDescData = file_mapspace_v1_mapspace_proto_rawDesc
)

func file_mapspace_v1_mapspace_proto_rawDescGZIP() []byte {
	file_mapspace_v1_mapspace_proto_rawDescOnce.Do(func() {
		file_mapspace_v1_mapspace_proto_rawDescData = protoimpl.X.CompressGZIP(file_mapspace_v1_mapspace_proto_rawDescData)
	})
	return file_mapspace_v1_mapspace_proto_rawDescData
}

var file_mapspace_v1_mapspace_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_mapspace_v1_mapspace_proto_goTypes = []any{
	(*Mapspace)(nil),       // 0: mapspace.v1.Mapspace
	(*MapspaceSpec)(nil),   // 1: mapspace.v1.MapspaceSpec
	(*MapspaceStatus)(nil), // 2: mapspace.v1.MapspaceStatus
	nil,                    // 3: mapspace.v1.MapspaceStatus.StatusMapEntry
	(*v1.TypeMeta)(nil),    // 4: meta.v1.TypeMeta
	(*v1.ObjectMeta)(nil),  // 5: meta.v1.ObjectMeta
}
var file_mapspace_v1_mapspace_proto_depIdxs = []int32{
	4, // 0: mapspace.v1.Mapspace.type:type_name -> meta.v1.TypeMeta
	5, // 1: mapspace.v1.Mapspace.metadata:type_name -> meta.v1.ObjectMeta
	1, // 2: mapspace.v1.Mapspace.spec:type_name -> mapspace.v1.MapspaceSpec
	2, // 3: mapspace.v1.MapspaceSpec.mapspace_status:type_name -> mapspace.v1.MapspaceStatus
	3, // 4: mapspace.v1.MapspaceStatus.statusMap:type_name -> mapspace.v1.MapspaceStatus.StatusMapEntry
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_mapspace_v1_mapspace_proto_init() }
func file_mapspace_v1_mapspace_proto_init() {
	if File_mapspace_v1_mapspace_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mapspace_v1_mapspace_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mapspace_v1_mapspace_proto_goTypes,
		DependencyIndexes: file_mapspace_v1_mapspace_proto_depIdxs,
		MessageInfos:      file_mapspace_v1_mapspace_proto_msgTypes,
	}.Build()
	File_mapspace_v1_mapspace_proto = out.File
	file_mapspace_v1_mapspace_proto_rawDesc = nil
	file_mapspace_v1_mapspace_proto_goTypes = nil
	file_mapspace_v1_mapspace_proto_depIdxs = nil
}
