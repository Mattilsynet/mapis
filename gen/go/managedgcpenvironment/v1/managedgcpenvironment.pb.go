// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.3
// 	protoc        (unknown)
// source: managedgcpenvironment/v1/managedgcpenvironment.proto

package managedgcpenvironment

import (
	_ "buf.build/gen/go/bufbuild/protovalidate/protocolbuffers/go/buf/validate"
	v1 "github.com/Mattilsynet/mapis/gen/go/meta/v1"
	_ "github.com/Mattilsynet/mapis/gen/go/status/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ManagedGcpEnvironment struct {
	state         protoimpl.MessageState       `protogen:"open.v1"`
	Type          *v1.TypeMeta                 `protobuf:"bytes,1,opt,name=type,proto3" json:"type,omitempty"`
	Metadata      *v1.ObjectMeta               `protobuf:"bytes,10,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Spec          *ManagedGcpEnvironmentSpec   `protobuf:"bytes,20,opt,name=spec,proto3" json:"spec,omitempty"`
	Status        *ManagedGcpEnvironmentStatus `protobuf:"bytes,30,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManagedGcpEnvironment) Reset() {
	*x = ManagedGcpEnvironment{}
	mi := &file_managedgcpenvironment_v1_managedgcpenvironment_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManagedGcpEnvironment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagedGcpEnvironment) ProtoMessage() {}

func (x *ManagedGcpEnvironment) ProtoReflect() protoreflect.Message {
	mi := &file_managedgcpenvironment_v1_managedgcpenvironment_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagedGcpEnvironment.ProtoReflect.Descriptor instead.
func (*ManagedGcpEnvironment) Descriptor() ([]byte, []int) {
	return file_managedgcpenvironment_v1_managedgcpenvironment_proto_rawDescGZIP(), []int{0}
}

func (x *ManagedGcpEnvironment) GetType() *v1.TypeMeta {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *ManagedGcpEnvironment) GetMetadata() *v1.ObjectMeta {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ManagedGcpEnvironment) GetSpec() *ManagedGcpEnvironmentSpec {
	if x != nil {
		return x.Spec
	}
	return nil
}

func (x *ManagedGcpEnvironment) GetStatus() *ManagedGcpEnvironmentStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ManagedGcpEnvironmentSpec struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// e.g., gcp.plattform@mattilsynet.no
	Group string `protobuf:"bytes,1,opt,name=group,proto3" json:"group,omitempty"`
	// [(buf.validate.field).string.email = true];
	// eg., "1182832818, the namespace folder which could be map-ops-dev/dev"
	ParentFolderId string `protobuf:"bytes,10,opt,name=parent_folder_id,json=parentFolderId,proto3" json:"parent_folder_id,omitempty"`
	// eg., "dev", "prod"
	Env          string `protobuf:"bytes,11,opt,name=env,proto3" json:"env,omitempty"`
	DnsZoneName  string `protobuf:"bytes,20,opt,name=dns_zone_name,json=dnsZoneName,proto3" json:"dns_zone_name,omitempty"`
	TeamArRepoId string `protobuf:"bytes,30,opt,name=team_ar_repo_id,json=teamArRepoId,proto3" json:"team_ar_repo_id,omitempty"`
	// eg., "123213213", which is the overall mapspace name, i.e., map-ops-dev
	MapspaceRef  string `protobuf:"bytes,40,opt,name=mapspace_ref,json=mapspaceRef,proto3" json:"mapspace_ref,omitempty"`
	BudgetAmount string `protobuf:"bytes,50,opt,name=budget_amount,json=budgetAmount,proto3" json:"budget_amount,omitempty"`
	// eg. for slack,
	// "some-team-aaaa94320493204932049320@somecompany-hq.slack.com" where budget
	// alerts would arrive at f.ex
	Email         string `protobuf:"bytes,60,opt,name=email,proto3" json:"email,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManagedGcpEnvironmentSpec) Reset() {
	*x = ManagedGcpEnvironmentSpec{}
	mi := &file_managedgcpenvironment_v1_managedgcpenvironment_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManagedGcpEnvironmentSpec) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagedGcpEnvironmentSpec) ProtoMessage() {}

func (x *ManagedGcpEnvironmentSpec) ProtoReflect() protoreflect.Message {
	mi := &file_managedgcpenvironment_v1_managedgcpenvironment_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagedGcpEnvironmentSpec.ProtoReflect.Descriptor instead.
func (*ManagedGcpEnvironmentSpec) Descriptor() ([]byte, []int) {
	return file_managedgcpenvironment_v1_managedgcpenvironment_proto_rawDescGZIP(), []int{1}
}

func (x *ManagedGcpEnvironmentSpec) GetGroup() string {
	if x != nil {
		return x.Group
	}
	return ""
}

func (x *ManagedGcpEnvironmentSpec) GetParentFolderId() string {
	if x != nil {
		return x.ParentFolderId
	}
	return ""
}

func (x *ManagedGcpEnvironmentSpec) GetEnv() string {
	if x != nil {
		return x.Env
	}
	return ""
}

func (x *ManagedGcpEnvironmentSpec) GetDnsZoneName() string {
	if x != nil {
		return x.DnsZoneName
	}
	return ""
}

func (x *ManagedGcpEnvironmentSpec) GetTeamArRepoId() string {
	if x != nil {
		return x.TeamArRepoId
	}
	return ""
}

func (x *ManagedGcpEnvironmentSpec) GetMapspaceRef() string {
	if x != nil {
		return x.MapspaceRef
	}
	return ""
}

func (x *ManagedGcpEnvironmentSpec) GetBudgetAmount() string {
	if x != nil {
		return x.BudgetAmount
	}
	return ""
}

func (x *ManagedGcpEnvironmentSpec) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

type ManagedGcpEnvironmentStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StatusMap     map[string]string      `protobuf:"bytes,1,rep,name=statusMap,proto3" json:"statusMap,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ManagedGcpEnvironmentStatus) Reset() {
	*x = ManagedGcpEnvironmentStatus{}
	mi := &file_managedgcpenvironment_v1_managedgcpenvironment_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ManagedGcpEnvironmentStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ManagedGcpEnvironmentStatus) ProtoMessage() {}

func (x *ManagedGcpEnvironmentStatus) ProtoReflect() protoreflect.Message {
	mi := &file_managedgcpenvironment_v1_managedgcpenvironment_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ManagedGcpEnvironmentStatus.ProtoReflect.Descriptor instead.
func (*ManagedGcpEnvironmentStatus) Descriptor() ([]byte, []int) {
	return file_managedgcpenvironment_v1_managedgcpenvironment_proto_rawDescGZIP(), []int{2}
}

func (x *ManagedGcpEnvironmentStatus) GetStatusMap() map[string]string {
	if x != nil {
		return x.StatusMap
	}
	return nil
}

var File_managedgcpenvironment_v1_managedgcpenvironment_proto protoreflect.FileDescriptor

var file_managedgcpenvironment_v1_managedgcpenvironment_proto_rawDesc = []byte{
	0x0a, 0x34, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x67, 0x63, 0x70, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67,
	0x65, 0x64, 0x67, 0x63, 0x70, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x67,
	0x63, 0x70, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x1a, 0x1b, 0x62, 0x75, 0x66, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x12, 0x6d,
	0x65, 0x74, 0x61, 0x2f, 0x76, 0x31, 0x2f, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x16, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x87, 0x02, 0x0a, 0x15, 0x4d, 0x61,
	0x6e, 0x61, 0x67, 0x65, 0x64, 0x47, 0x63, 0x70, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x25, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x6d, 0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x6d,
	0x65, 0x74, 0x61, 0x2e, 0x76, 0x31, 0x2e, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4d, 0x65, 0x74,
	0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x47, 0x0a, 0x04, 0x73,
	0x70, 0x65, 0x63, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x33, 0x2e, 0x6d, 0x61, 0x6e, 0x61,
	0x67, 0x65, 0x64, 0x67, 0x63, 0x70, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e,
	0x74, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x47, 0x63, 0x70, 0x45,
	0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65, 0x63, 0x52, 0x04,
	0x73, 0x70, 0x65, 0x63, 0x12, 0x4d, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x35, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x67, 0x63,
	0x70, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x47, 0x63, 0x70, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f,
	0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x22, 0xac, 0x03, 0x0a, 0x19, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x47,
	0x63, 0x70, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x70, 0x65,
	0x63, 0x12, 0x56, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x40, 0xba, 0x48, 0x3d, 0xba, 0x01, 0x3a, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1b, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x20, 0x6d, 0x75, 0x73,
	0x74, 0x20, 0x62, 0x65, 0x20, 0x61, 0x20, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x20, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x1a, 0x0e, 0x74, 0x68, 0x69, 0x73, 0x2e, 0x69, 0x73, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x28, 0x29, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x28, 0x0a, 0x10, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x5f, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x0a, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x03, 0x65, 0x6e, 0x76, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x10, 0xba, 0x48, 0x0d, 0x72, 0x0b, 0x52, 0x03, 0x64, 0x65, 0x76, 0x52, 0x04, 0x70, 0x72,
	0x6f, 0x64, 0x52, 0x03, 0x65, 0x6e, 0x76, 0x12, 0x22, 0x0a, 0x0d, 0x64, 0x6e, 0x73, 0x5f, 0x7a,
	0x6f, 0x6e, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x6e, 0x73, 0x5a, 0x6f, 0x6e, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x25, 0x0a, 0x0f, 0x74,
	0x65, 0x61, 0x6d, 0x5f, 0x61, 0x72, 0x5f, 0x72, 0x65, 0x70, 0x6f, 0x5f, 0x69, 0x64, 0x18, 0x1e,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x74, 0x65, 0x61, 0x6d, 0x41, 0x72, 0x52, 0x65, 0x70, 0x6f,
	0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x70, 0x73, 0x70, 0x61, 0x63, 0x65, 0x5f, 0x72,
	0x65, 0x66, 0x18, 0x28, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x70, 0x73, 0x70, 0x61,
	0x63, 0x65, 0x52, 0x65, 0x66, 0x12, 0x23, 0x0a, 0x0d, 0x62, 0x75, 0x64, 0x67, 0x65, 0x74, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75,
	0x64, 0x67, 0x65, 0x74, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x56, 0x0a, 0x05, 0x65, 0x6d,
	0x61, 0x69, 0x6c, 0x18, 0x3c, 0x20, 0x01, 0x28, 0x09, 0x42, 0x40, 0xba, 0x48, 0x3d, 0xba, 0x01,
	0x3a, 0x0a, 0x0b, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1b,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x20, 0x6d, 0x75, 0x73, 0x74, 0x20, 0x62, 0x65, 0x20, 0x61, 0x20,
	0x76, 0x61, 0x6c, 0x69, 0x64, 0x20, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x1a, 0x0e, 0x74, 0x68, 0x69,
	0x73, 0x2e, 0x69, 0x73, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x28, 0x29, 0x52, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x22, 0xbf, 0x01, 0x0a, 0x1b, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x47, 0x63,
	0x70, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x62, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x4d, 0x61, 0x70, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x44, 0x2e, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x67,
	0x63, 0x70, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2e, 0x76, 0x31,
	0x2e, 0x4d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x47, 0x63, 0x70, 0x45, 0x6e, 0x76, 0x69, 0x72,
	0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x2e, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x4d, 0x61, 0x70, 0x1a, 0x3c, 0x0a, 0x0e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x4d, 0x61, 0x70, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x42, 0x51, 0x5a, 0x4f, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x6d, 0x61, 0x74, 0x74, 0x69, 0x6c, 0x73, 0x79, 0x6e, 0x65, 0x74, 0x2f, 0x6d,
	0x61, 0x70, 0x69, 0x73, 0x2f, 0x67, 0x65, 0x6e, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64,
	0x67, 0x63, 0x70, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x2f, 0x76,
	0x31, 0x3b, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x64, 0x67, 0x63, 0x70, 0x65, 0x6e, 0x76, 0x69,
	0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_managedgcpenvironment_v1_managedgcpenvironment_proto_rawDescOnce sync.Once
	file_managedgcpenvironment_v1_managedgcpenvironment_proto_rawDescData = file_managedgcpenvironment_v1_managedgcpenvironment_proto_rawDesc
)

func file_managedgcpenvironment_v1_managedgcpenvironment_proto_rawDescGZIP() []byte {
	file_managedgcpenvironment_v1_managedgcpenvironment_proto_rawDescOnce.Do(func() {
		file_managedgcpenvironment_v1_managedgcpenvironment_proto_rawDescData = protoimpl.X.CompressGZIP(file_managedgcpenvironment_v1_managedgcpenvironment_proto_rawDescData)
	})
	return file_managedgcpenvironment_v1_managedgcpenvironment_proto_rawDescData
}

var file_managedgcpenvironment_v1_managedgcpenvironment_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_managedgcpenvironment_v1_managedgcpenvironment_proto_goTypes = []any{
	(*ManagedGcpEnvironment)(nil),       // 0: managedgcpenvironment.v1.ManagedGcpEnvironment
	(*ManagedGcpEnvironmentSpec)(nil),   // 1: managedgcpenvironment.v1.ManagedGcpEnvironmentSpec
	(*ManagedGcpEnvironmentStatus)(nil), // 2: managedgcpenvironment.v1.ManagedGcpEnvironmentStatus
	nil,                                 // 3: managedgcpenvironment.v1.ManagedGcpEnvironmentStatus.StatusMapEntry
	(*v1.TypeMeta)(nil),                 // 4: meta.v1.TypeMeta
	(*v1.ObjectMeta)(nil),               // 5: meta.v1.ObjectMeta
}
var file_managedgcpenvironment_v1_managedgcpenvironment_proto_depIdxs = []int32{
	4, // 0: managedgcpenvironment.v1.ManagedGcpEnvironment.type:type_name -> meta.v1.TypeMeta
	5, // 1: managedgcpenvironment.v1.ManagedGcpEnvironment.metadata:type_name -> meta.v1.ObjectMeta
	1, // 2: managedgcpenvironment.v1.ManagedGcpEnvironment.spec:type_name -> managedgcpenvironment.v1.ManagedGcpEnvironmentSpec
	2, // 3: managedgcpenvironment.v1.ManagedGcpEnvironment.status:type_name -> managedgcpenvironment.v1.ManagedGcpEnvironmentStatus
	3, // 4: managedgcpenvironment.v1.ManagedGcpEnvironmentStatus.statusMap:type_name -> managedgcpenvironment.v1.ManagedGcpEnvironmentStatus.StatusMapEntry
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_managedgcpenvironment_v1_managedgcpenvironment_proto_init() }
func file_managedgcpenvironment_v1_managedgcpenvironment_proto_init() {
	if File_managedgcpenvironment_v1_managedgcpenvironment_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_managedgcpenvironment_v1_managedgcpenvironment_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_managedgcpenvironment_v1_managedgcpenvironment_proto_goTypes,
		DependencyIndexes: file_managedgcpenvironment_v1_managedgcpenvironment_proto_depIdxs,
		MessageInfos:      file_managedgcpenvironment_v1_managedgcpenvironment_proto_msgTypes,
	}.Build()
	File_managedgcpenvironment_v1_managedgcpenvironment_proto = out.File
	file_managedgcpenvironment_v1_managedgcpenvironment_proto_rawDesc = nil
	file_managedgcpenvironment_v1_managedgcpenvironment_proto_goTypes = nil
	file_managedgcpenvironment_v1_managedgcpenvironment_proto_depIdxs = nil
}
